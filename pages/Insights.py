# Libs
import pandas as pd
import streamlit as st
from project.get_data import GetIPEAData

# Dataviz
import plotly.express as px
import plotly.graph_objects as go
import plotly.figure_factory as ff
from plotly.subplots import make_subplots

# Configura√ß√µes da p√°gina
st.set_page_config(page_title="Insights", page_icon="üìä", layout="wide")
st.header("Insights Extra√≠dos üìä")

# Layout do aplicativo
tab0, tab1, tab2 = st.tabs(
    ["Linha do Tempo", "Indicadores Econ√¥micos", "An√°lise dos dias da Semana"]
)

if "df_data" not in st.session_state:
    # Dados
    ipea = GetIPEAData(database_path="source\db_main.csv")
    st.session_state.df_data = ipea.db_main


with tab0:
    # Crie um widget date_input para o usu√°rio selecionar um intervalo de datas
    col1, col2 = st.columns(2)
    with col1:
        start_date = pd.to_datetime(
            st.date_input(
                "Selecione a data de in√≠cio", st.session_state.df_data["date"].min()
            )
        )
    with col2:
        end_date = pd.to_datetime(
            st.date_input(
                "Selecione a data de t√©rmino", st.session_state.df_data["date"].max()
            )
        )

    # Gr√°fico de linha com filtros
    fig = px.line(st.session_state.df_data, x="date", y="oil_value_usd")
    mask = (st.session_state.df_data["date"] >= start_date) & (
        st.session_state.df_data["date"] <= end_date
    )
    fig.update_traces(x=st.session_state.df_data[mask]["date"])

    # Design & layout
    fig.update_layout(
        title="Distribui√ß√£o do valor do petr√≥leo Brent ao longo dos anos",
        title_font=dict(size=24),
        width=2000,
        height=500,
        template="plotly_dark",
    )

    fig.update_xaxes(title="Anos", title_font=dict(size=18))

    fig.update_yaxes(title="Valor", title_font=dict(size=18))

    idx = st.session_state.df_data.groupby(
        st.session_state.df_data[mask]["date"].dt.year
    )["oil_value_usd"].idxmax()

    # Adicione um ponto ao gr√°fico em cada um desses √≠ndices
    fig.add_trace(
        px.scatter(st.session_state.df_data.loc[idx], x="date", y="oil_value_usd").data[
            0
        ]
    )
    fig.update_traces(marker=dict(color="red", size=10))

    st.plotly_chart(fig, use_container_width=True)
    st.markdown(
        """
        Nossa se√ß√£o "Linha do Tempo" oferece uma jornada visual atrav√©s da hist√≥ria dos pre√ßos do petr√≥leo Brent, destacando como eventos globais e tend√™ncias econ√¥micas se refletiram no mercado energ√©tico. Esta linha do tempo √© mais do que uma simples trilha de n√∫meros; ela √© um mapa que revela como conflitos geopol√≠ticos, avan√ßos tecnol√≥gicos, crises financeiras e mudan√ßas na pol√≠tica ambiental t√™m influenciado os pre√ßos ao longo das d√©cadas.

        Cada pico e vale em nosso gr√°fico conta uma hist√≥ria: o choque dos pre√ßos na virada do mil√™nio, a volatilidade durante a crise financeira de 2008, as implica√ß√µes da revolu√ß√£o do xisto nos EUA e a recente instabilidade trazida pela pandemia COVID-19. Ao explorar esses pontos de dados, voc√™ pode observar padr√µes e extrair li√ß√µes valiosas que informam n√£o apenas sobre o estado atual do mercado, mas tamb√©m sobre poss√≠veis futuros cen√°rios
        """
    )


with tab1:
    db_war_contry = pd.read_csv(r'.\war_data\countries-in-conflict-data-all.csv', sep=",")
    db_war_contry = db_war_contry.rename(columns={'Entity': 'country', 'Code': 'code', 'Year': 'year', 'Deaths in ongoing conflicts in a country (best estimate) - Conflict_type: all': 'conflict_deaths'})
    db_war_contry = db_war_contry.drop(db_war_contry[db_war_contry['conflict_deaths'] == 0].index)
    db_war_contry = db_war_contry.dropna(subset="conflict_deaths")
    db_war_contry['key_reference'] = db_war_contry['code'] + db_war_contry['year'].astype(str)
    db_war_contry = db_war_contry[['key_reference', 'country', 'code', 'year', 'conflict_deaths']]


    db_war_type = pd.read_csv(r'.\war_data\countries-in-conflict-data-by-type.csv', sep=",")
    db_war_type = db_war_type.rename(columns={'Entity': 'country', 'Code': 'code', 'Year': 'year', 'One-sided violence': 'one_sided_violence', 'Non-state': 'non_state', 'Intrastate': 'intra_state', 'Interstate': 'inter_state'})
    db_war_type['total_deaths'] = db_war_type['one_sided_violence'].astype(str) + db_war_type['non_state'].astype(str) + db_war_type['intra_state'].astype(str) + db_war_type['inter_state'].astype(str)
    db_war_type = db_war_type.drop(db_war_type[db_war_type['total_deaths'] == '0000'].index)
    db_war_type = db_war_type.dropna(subset="total_deaths")
    db_war_type['key_reference'] = db_war_type['code'] + db_war_type['year'].astype(str)
    db_war_type = db_war_type[['key_reference', 'country', 'code', 'year', 'one_sided_violence', 'non_state', 'intra_state', 'inter_state']]


    db_war = db_war_contry.merge(db_war_type, how='left', on='key_reference')
    db_war = db_war.drop(columns=['country_y', 'code_y', 'year_y'])
    db_war = db_war.rename(columns={'country_x': 'country', 'code_x': 'code', 'year_x': 'year'})
    db_war = db_war.loc[db_war['year'] >= 2000]


    db_war_oil = db_war.loc[(db_war['country'] == 'Iraq') | (db_war['country'] == 'Afghanistan') | (db_war['country'] == 'South Sudan')]
    db_main_year = st.session_state.df_data.groupby('year').first().reset_index()
    db_war_oil_pivot = db_war_oil.pivot(index='year', columns='country', values='conflict_deaths')
    db_war_oil_pivot = db_war_oil_pivot.rename(columns={'Afghanistan': 'afghanistan_deaths', 'Iraq': 'iraq_deaths', 'South Sudan': 'south_sudan_deaths'})

    corr_matrix_war = db_main_year.merge(db_war_oil_pivot, how='left', on='year')
    corr_matrix_war = corr_matrix_war[['year', 'oil_value_usd', 'euro_value_usd', 'dolar_value_brl', 'ipc_value_percent_a_m', 'nasdaq_value', 'afghanistan_deaths', 'iraq_deaths', 'south_sudan_deaths']]
    corr_matrix_war = corr_matrix_war.corr().round(2)
    corr_matrix_war.columns = [
        "Ano",
        "Valor Brent (USD)",
        "Valor Euro (USD)",
        "Valor Dolar (BRL)",
        "IPC Percent (a.m)",
        "Valor Nasdaq",
        "Mortes - Afeganist√£o",
        "Mortes - Iraque",
        "Mortes - Sud√£o do Sul"
    ]
    fig = ff.create_annotated_heatmap(
        z=corr_matrix_war.to_numpy(),
        y=corr_matrix_war.columns.to_list(),
        x=corr_matrix_war.columns.to_list(),
        textfont_color="white",
        zmax=1,
        zmin=-1,
        showscale=True,
        hoverongaps=True,
        colorscale="ice",
    )

    fig.update_layout(
        title="Matriz de Correla√ß√£o", title_font=dict(size=24), width=500, height=500
    )
    st.plotly_chart(fig, use_container_width=True)

    st.markdown(
        """
        No cora√ß√£o do setor energ√©tico, o pre√ßo do petr√≥leo Brent √© influenciado por uma complexa rede de fatores econ√¥micos. A se√ß√£o "Indicadores Econ√¥micos" mergulha na interdepend√™ncia dos indicadores econ√¥micos globais e seu impacto nos pre√ßos do petr√≥leo. Utilizando uma matriz de correla√ß√£o avan√ßada, revelamos como vari√°veis como √≠ndices de bolsas de valores, taxas de c√¢mbio e outros indicadores macroecon√¥micos se movem em conjunto com os pre√ßos do petr√≥leo.
        
        Esta an√°lise n√£o apenas destaca correla√ß√µes diretas, mas tamb√©m aponta para influ√™ncias menos √≥bvias que podem n√£o ser imediatamente aparentes. Por exemplo, uma correla√ß√£o positiva forte entre o pre√ßo do petr√≥leo e um determinado √≠ndice de mercado pode sinalizar a sensibilidade do setor energ√©tico a mudan√ßas na confian√ßa dos investidores. Alternativamente, uma correla√ß√£o negativa com uma moeda pode indicar a influ√™ncia das pol√≠ticas monet√°rias e das taxas de juros.
        Entender essas din√¢micas √© crucial para qualquer estrat√©gia de gest√£o de risco e investimento, pois fornece uma vis√£o mais hol√≠stica e fundamentada do mercado. Atrav√©s desta lente anal√≠tica, voc√™ pode antecipar melhor as rea√ß√µes do mercado a eventos futuros e posicionar-se de forma proativa.
        """
    )

    st.divider()

    fig = px.line(db_war_oil, x="year", y="conflict_deaths", color="country")

    fig.update_layout(
        title="Conflitos de Guerra", 
        title_font=dict(size=24), 
        width=500, 
        height=500,
        legend_title="Pa√≠s"
    )
    newnames = {'Iraq': 'Iraque', 'Afghanistan': 'Afeganist√£o', 'South Sudan': 'Sud√£o do Sul'}
    fig.for_each_trace(lambda t: t.update(name = newnames[t.name]))
    fig.update_yaxes(title="Total de Mortes", title_font=dict(size=18))

    fig.update_xaxes(title="Ano", title_font=dict(size=18))
    st.plotly_chart(fig, use_container_width=True)



with tab2:
    col1, col2 = st.columns(2)
    with col1:
        ## DATAVIZ COUNT PLOT
        fig = px.histogram(
            st.session_state.df_data,
            y="week_date",
            text_auto=True,
            color="week_date",
            color_discrete_sequence=px.colors.qualitative.Safe,
        )

        fig.update_layout(
            title="Contagem de valores nos dias da semana",
            title_font=dict(size=24),
            width=500,
            height=500,
            template="plotly_dark",
            showlegend=False,
        )
        fig.update_yaxes(title="Dia da semana", title_font=dict(size=18))

        fig.update_xaxes(title="Contagem", title_font=dict(size=18))
        # Atualize as barras
        fig.update_traces(
            textposition="outside",
        )
        st.plotly_chart(fig, use_container_width=True)

    with col2:
        st.write(
            "Neste gr√°fico, observamos a contagem de valores registrados para o petr√≥leo Brent durante cada dia da semana. A distribui√ß√£o reflete o pulso do com√©rcio global de petr√≥leo, com a atividade do mercado seguindo o calend√°rio comercial tradicional. Durante os finais de semana, vemos uma queda not√°vel, um reflexo direto do fechamento dos mercados globais. Essa tend√™ncia ressalta a import√¢ncia do tempo na ind√∫stria do petr√≥leo, onde cada dia da semana carrega seu pr√≥prio perfil de atividade e potencial de negocia√ß√£o."
        )

    fig = px.scatter(
        st.session_state.df_data,
        x="oil_value_usd",
        y="year",
        color="week_date",
        title="Relation Between Oil Price and Year based on the Week Day",
        color_discrete_sequence=px.colors.qualitative.Safe,
    )
    fig.update_layout(
        title="Distribui√ß√£o do valor do Petr√≥leo Brent em cada ano por dia da semana",
        title_font=dict(size=24),
        width=500,
        height=750,
        template="plotly_dark",
        showlegend=False,
    )
    fig.update_yaxes(title="Ano", title_font=dict(size=18))
    fig.update_xaxes(title="Valor do Petr√≥leo Brent", title_font=dict(size=18))

    st.plotly_chart(fig, use_container_width=True)
    st.write(
        "Aqui, tra√ßamos a distribui√ß√£o dos pre√ßos do petr√≥leo Brent ao longo dos anos, discriminada por dias da semana. Esse gr√°fico revela se existem padr√µes de pre√ßos consistentes ou anomalias que emergem em dias espec√≠ficos ao longo do tempo. Pode-se notar, por exemplo, se os picos de pre√ßo tendem a ocorrer mais em um dia da semana do que em outros, o que poderia sugerir a influ√™ncia de relat√≥rios de mercado ou atualiza√ß√µes pol√≠ticas regulares. Essa perspectiva temporal oferece aos analistas um detalhe granular, possibilitando uma an√°lise direcionada que pode capturar nuances ocultas nas tend√™ncias de pre√ßos."
    )
